<html>
    <head>
        <title>Edit Product</title>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <!-- FONTS -->
        <link rel="stylesheet" href="/css/font/fonts.css">

        <!-- JS -->
        <script src="/js/forgot.js"></script>

        <!-- CSS -->
        <link rel="stylesheet" type="text/css" href="/css/base.css">
        <link rel="stylesheet" type="text/css" href="/css/edit-product.css">
    </head>
    <body>
        <div class = "main">
            <div class = "inner-col">
                <div class = "row-1">
                    <a href = "/sales" class = "back-button">â—„ Sales</a>
                </div>
                <div class = "row-body" >
                    <h1>Edit Product</h1>
                    <form class="entry" action="/editProduct/<%=rows.productId%>" method="post" name="editProduct" onsubmit="return validateForm()">
                        <div class = "inner-card">
                            <label>Product Name</label>
                            <input  required type = "text" class = "input" name = "productName" value="<%=rows.productName%>">
                            <label>Price</label>
                            <input required type = "number" class = "input" min="1" name="price" value="<%=rows.price%>">
                            <label>Ingredients</label>
                            <div class = "ingredient-input">                                
                                <div class = "ingredient-name" id= "newElementId">
                                    <label>Ingredient Name</label>
                                    <% for (const inv of recipe) { %>
                                        <select required  name="ingredients[]" class = "ingredient-name add-input">
                                            <option value = "<%=inv.ingredients%>"  selected ><%=inv.ingredients%></option>
                                            
                                            <% for (const inv of model) { %>
                                                <option value = "<%=inv.ingredients%>"><%=inv.ingredients%></option><%}%>
                                        </select><%}%>
                                    </div>
                                    <div class = "ingredient-qty" id="qty">
                                        <label>Qty.</label>
                                        <div class = "ingredient-tooltip tooltip" data-tooltip-value = "Solid Ingredients are measured in Grams (g) and Liquid Ingredients are measured in Milliliters (ml)"></div>
                                        <% for (const inv of recipe) { %>
                                        <input required class = "ingredient-add add-input" type= "number" value="<%=inv.recipe_qty%>" name= "qty[]" >
                                        <%}%>
                                </div>
                            </div>
                            <div class = "row-before-4">
                                <input class = "addb new-button" type="button" value="Add Ingredient" onclick="createNewElement();"/>
                                <input class = "new-button"  type="button" value="Remove Ingredient" onclick="removeElement();"/>
                            </div>
                            <div class = "row-4">
                                <button type = "button" class = "delete-button outcome-button" onclick ="window.location.href = '/deleteProduct/<%= rows.productId %>'">Delete</button>
                                <button type = "button" class = "cancel-button outcome-button" onclick ="window.location.href = '/sales'">Cancel</button>
                                <input type = "submit" class = "submit-button outcome-button">
                            </div>
                        </div> 
                    </form>
                </div>
            </div>
        </div>
        <script>
                var intTextBox = 0;
            function createNewElement() {
    // First create a DIV element.
    
    intTextBox++;
	var txtNewInputBox1 = document.createElement('div');
    var txtNewInputBox2 = document.createElement('div');

    // Then add the content (a new input box) of the element.
    txtNewInputBox1.setAttribute('id', 'div_' + intTextBox);
    txtNewInputBox2.setAttribute('id', 'div_' + intTextBox);
	txtNewInputBox1.innerHTML = "<select required type='text' id='newInputBox' name = 'ingredient[]' class = 'ingredient-name add-input'><option value = '' disabled selected>Select</option><% for (const inv of model) { %> <option value = '<%=inv.ingredients%>'><%=inv.ingredients%></option><%}%> </select>";
    txtNewInputBox2.innerHTML = "<input required name = 'qtya[]'  class = 'ingredient-add add-input' type= 'number' min='1'>"
    // Finally put it where it is supposed to appear.
	document.getElementById("newElementId").appendChild(txtNewInputBox1);
    document.getElementById("qty").appendChild(txtNewInputBox2);
}
function removeElement() {
    if(0 < intTextBox) {
        document.getElementById('newElementId').removeChild(document.getElementById('div_' + intTextBox));
        document.getElementById('qty').removeChild(document.getElementById('div_' + intTextBox));
        intTextBox--;
    } else {
        alert("Can no longer remove input.");
    }
 
}
        </script>
    </body>
</html>